{"version":3,"sources":["api/apiService.jsx","views/CurrentTemp.styled.jsx","views/CurrentTemp.jsx","components/CitySearch.styled.jsx","components/CitySearch.jsx","hooks/useGeolocation.jsx","App.js","index.js"],"names":["BASE_URL","KEY","data","a","axios","get","then","value","console","log","status","Error","response","lat","lon","Container","styled","div","InfoWrapper","WeatherPicture","props","picture","Temp","h3","p","CurrentTemp","location","useState","temp","setTemp","weatherData","setWeatherData","useEffect","undefined","Number","FetchWeather","Math","floor","main","catch","error","alert","message","isNaN","FetchWeaterByLocation","weather","icon","name","sys","country","card","document","querySelector","style","backgroundColor","isItWarm","humidity","feels_like","wind","speed","Form","form","Input","input","Button","button","CitySearch","onCitySearch","onCoordSearch","result","setResult","setLocation","onSubmit","event","preventDefault","target","reset","type","placeholder","onInput","slice","coords","split","round","App","city","setCity","position","loaded","coord","loc","setLoc","onSuccess","latitude","longitude","onError","navigator","err","geolocation","getCurrentPosition","useGeolocation","Wrapper","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dac837f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst KEY = \"99865ebe8f851231124cb09f7d46c675\";\n\nexport async function FetchWeather(data) {\n  const response = await axios\n    .get(`${BASE_URL}?q=${data}&units=metric&appid=${KEY}`)\n    .then((value) => {\n      console.log(\"in fetch:\", value);\n      if (value.status !== 200) {\n        throw new Error(value.status);\n      }\n      return value.data;\n    });\n  return response;\n}\n\nexport async function FetchWeaterByLocation(data) {\n  const response = await axios\n    .get(\n      `${BASE_URL}?lat=${data.lat}&lon=${data.lon}&units=metric&appid=${KEY}`\n    )\n    .then((value) => {\n      if (value.status !== 200) {\n        throw new Error(value.status);\n      }\n      return value.data;\n    });\n  return response;\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 8px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nexport const WeatherPicture = styled.div`\n  width: 140px;\n  height: 140px;\n  margin-left: auto;\n  margin-right: auto;\n  background-image: ${(props) => {\n    return `url( http://openweathermap.org/img/wn/${props.picture}@2x.png)`;\n  }};\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const Temp = styled.h3`\n  font-size: 50px;\n  font-weight: 700;\n`;\n\nexport const Text = styled.p``;\n","import { FetchWeaterByLocation } from \"../api/apiService\";\nimport { FetchWeather } from \"../api/apiService\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Container,\n  InfoWrapper,\n  WeatherPicture,\n  Temp,\n} from \"./CurrentTemp.styled\";\n\nexport function CurrentTemp({ data, location }) {\n  const [temp, setTemp] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n\n  useEffect(() => {\n    if (data === \"\" || data === undefined || Number(data)) {\n      return;\n    }\n    FetchWeather(data)\n      .then((response) => {\n        setWeatherData(response);\n        setTemp(Math.floor(response.main.temp));\n      })\n      .catch((error) => {\n        alert(\"Data is not found for this city\");\n        console.log(\"Info at error block:\", error.message);\n      });\n  }, [data]);\n\n  useEffect(() => {\n    if (!isNaN(location.lat) && !isNaN(location.lon)) {\n      FetchWeaterByLocation(location)\n        .then((response) => {\n          setWeatherData(response);\n          setTemp(Math.floor(response.main.temp));\n        })\n        .catch((error) => {\n          alert(\"Data is not found for this city\");\n          console.log(error.message);\n        });\n    }\n  }, [location]);\n\n  const isItWarm = (temp) => {\n    const card = document.querySelector(\"#tempCard\");\n    if (temp < -10) {\n      card.style.backgroundColor = \"#00ffff\";\n      return \"cold\";\n    }\n    if (temp > -10 && temp < 30) {\n      card.style.backgroundColor = \"#fff700\";\n      return \"warm\";\n    }\n    if (temp > 30) {\n      card.style.backgroundColor = \"#ff8c00\";\n      return \"hot\";\n    }\n  };\n\n  if (typeof weatherData.main !== \"undefined\") {\n    return (\n      <Container>\n        <WeatherPicture picture={weatherData.weather[0].icon} />\n        <InfoWrapper>\n          <h3>\n            {weatherData.name},{weatherData.sys.country}\n          </h3>\n          <Temp>{temp}</Temp>\n          <p>\n            Its {isItWarm(temp)}, humidity is {weatherData.main.humidity}% and\n            it feels like {Math.floor(weatherData.main.feels_like)} degrees\n          </p>\n          <p>Wind is {Math.floor(weatherData.wind.speed)} m/s</p>\n        </InfoWrapper>\n      </Container>\n    );\n  }\n  return <p>No data yet</p>;\n}\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  min-width: 280px;\n  max-width: 600px;\n  padding: 16px 8px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  min-width: 220px;\n  max-width: 450px;\n  margin-right: 10px;\n  border-radius: 4px;\n  border: 1px solid #fd7e14;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  background-color: #fd7e14;\n  border: none;\n  color: #fff;\n`;\n","import { useState } from \"react\";\nimport { Form, Input, Button } from \"./CitySearch.styled\";\n\nexport function CitySearch({ onCitySearch, onCoordSearch }) {\n  const [result, setResult] = useState(\"\");\n  const [location, setLocation] = useState({\n    lat: \"\",\n    lon: \"\",\n  });\n\n  const formHandler = (event) => {\n    event.preventDefault();\n    if (result === \"\" && location.lat === \"\" && location.lon === \"\") {\n      alert(\"Enter the city or coordinates\");\n      return;\n    }\n    onCitySearch(result);\n    onCoordSearch(location);\n\n    event.target.reset();\n  };\n\n  const inputHandler = (event) => {\n    const data = event.target.value;\n    if (isNaN(data.slice(0, 2)) && Number(data) !== 0) {\n      setResult(data);\n    }\n    const coords = data.split(\" \");\n    setLocation({ lat: Math.round(coords[0]), lon: Math.round(coords[1]) });\n  };\n\n  return (\n    <Form onSubmit={formHandler}>\n      <Input\n        type=\"text\"\n        name=\"citySearch\"\n        placeholder=\"Enter the city or coordinates\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport const useGeolocation = () => {\n  const [loc, setLoc] = useState({\n    loaded: false,\n    coord: { lat: \"\", lon: \"\" },\n    error: \"\",\n  });\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      setLoc({\n        loaded: true,\n        err: \"Not supported\",\n      });\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  function onSuccess(location) {\n    setLoc({\n      loaded: true,\n      coord: { lat: location.coords.latitude, lon: location.coords.longitude },\n      error: \"\",\n    });\n  }\n  function onError(error) {\n    setLoc({\n      loaded: true,\n      error,\n    });\n    console.log(error.message);\n  }\n  return loc.coord;\n};\n","import \"./App.css\";\nimport { CurrentTemp } from \"./views/CurrentTemp\";\nimport { CitySearch } from \"./components/CitySearch\";\nimport { useState, useEffect } from \"react\";\nimport { useGeolocation } from \"./hooks/useGeolocation\";\nimport styled from \"@emotion/styled\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [location, setLocation] = useState({});\n  const position = useGeolocation();\n\n  useEffect(() => {\n    setLocation({\n      lat: Number(position.lat),\n      lon: Number(position.lon),\n    });\n  }, [position.lat, position.lon]);\n\n  const inputHandler = (result) => setCity(result);\n  const coordInputHandler = (result) => setLocation(result);\n\n  return (\n    <Container>\n      <Wrapper id=\"tempCard\">\n        <CitySearch\n          onCitySearch={inputHandler}\n          onCoordSearch={coordInputHandler}\n        />\n        <CurrentTemp data={city} location={location} />\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  min-width: 320px;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding: 8px;\n  margin: 0 auto;\n  background-color: transparent;\n`;\n\nconst Wrapper = styled.div`\n  border-radius: 12px;\n  box-shadow: -1px 0px 8px -3px rgba(34, 60, 80, 0.15);\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}