{"version":3,"sources":["api/apiService.jsx","views/CurrentTemp.styled.jsx","hooks/isItWarm.jsx","hooks/dynamicTemperature.jsx","views/CurrentTemp.jsx","components/CitySearch.styled.jsx","components/CitySearch.jsx","hooks/useGeolocation.jsx","App.js","index.js"],"names":["BASE_URL","KEY","data","a","axios","get","then","value","status","Error","response","lat","lon","Container","styled","div","InfoWrapper","WeatherPicture","props","picture","Temp","h3","Text","p","isItWarm","temp","document","querySelector","style","backgroundColor","r","g","b","Math","round","dynamicTemp","CurrentTemp","location","useState","setTemp","weatherData","setWeatherData","useEffect","undefined","Number","FetchWeather","floor","main","catch","error","alert","console","log","message","isNaN","FetchWeaterByLocation","weather","icon","name","sys","country","humidity","feels_like","wind","speed","pressure","Form","form","Input","input","Button","button","CitySearch","onCitySearch","onCoordSearch","result","setResult","setLocation","onSubmit","event","preventDefault","target","reset","type","placeholder","onInput","slice","coords","split","App","city","setCity","position","loaded","coord","loc","setLoc","onSuccess","latitude","longitude","onError","navigator","err","geolocation","getCurrentPosition","useGeolocation","Wrapper","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.053693c3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst KEY = \"99865ebe8f851231124cb09f7d46c675\";\n\nexport async function FetchWeather(data) {\n  const response = await axios\n    .get(`${BASE_URL}?q=${data}&units=metric&appid=${KEY}`)\n    .then((value) => {\n      if (value.status !== 200) {\n        throw new Error(value.status);\n      }\n      return value.data;\n    });\n  return response;\n}\n\nexport async function FetchWeaterByLocation(data) {\n  const response = await axios\n    .get(\n      `${BASE_URL}?lat=${data.lat}&lon=${data.lon}&units=metric&appid=${KEY}`\n    )\n    .then((value) => {\n      if (value.status !== 200) {\n        throw new Error(value.status);\n      }\n      return value.data;\n    });\n  return response;\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 8px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nexport const WeatherPicture = styled.div`\n  width: 140px;\n  height: 140px;\n  margin-left: auto;\n  margin-right: auto;\n  background-image: ${(props) => {\n    return `url( http://openweathermap.org/img/wn/${props.picture}@2x.png)`;\n  }};\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const Temp = styled.h3`\n  font-size: 50px;\n  font-weight: 700;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  padding: 0;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { dynamicTemp } from \"./dynamicTemperature\";\n\nexport const isItWarm = (temp) => {\n  const card = document.querySelector(\"#tempCard\");\n  card.style.backgroundColor = dynamicTemp(temp);\n  if (temp > 30) {\n    return \"very hot\";\n  } else if (temp > 15 && temp < 30) {\n    return \"comfortable\";\n  } else if (temp > 5 && temp < 16) {\n    return \"normal\";\n  } else if (temp > -5 && temp < 6) {\n    return \"chilly\";\n  } else if (temp < -4 && temp > -15) {\n    return \"cold\";\n  } else if (temp < -14) {\n    return \"very cold\";\n  }\n};\n","export const dynamicTemp = (temp) => {\n  let r;\n  if (temp > 10) {\n    r = 255;\n  } else if (temp < 10 && temp > -1) {\n    r = Math.round(255 - 255 / temp);\n    if (r < 0) {\n      r = 0;\n    }\n  } else {\n    r = 0;\n  }\n  let g;\n  if (temp < 15 && temp > -10) {\n    g = 255;\n  } else if (temp > 15) {\n    g = Math.round(255 - temp * 5);\n    if (g < 0) {\n      g = 0;\n    } else if (g > 255) {\n      g = 255;\n    }\n  } else if (temp < 0) {\n    g = Math.round(255 + temp * 5);\n    if (g < 0) {\n      g = 0;\n    } else if (g > 255) {\n      g = 255;\n    }\n  }\n  let b;\n  if (temp > 0) {\n    b = 0;\n  } else {\n    b = 255 - temp * 12.5;\n    if (b < 0) {\n      b = 0;\n    } else {\n      b = 255;\n    }\n  }\n  return `rgb(${r},${g},${b})`;\n};\n","import { FetchWeaterByLocation } from \"../api/apiService\";\nimport { FetchWeather } from \"../api/apiService\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Container,\n  InfoWrapper,\n  WeatherPicture,\n  Temp,\n  Text,\n} from \"./CurrentTemp.styled\";\nimport { isItWarm } from \"hooks/isItWarm\";\n\nexport function CurrentTemp({ data, location }) {\n  const [temp, setTemp] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n\n  useEffect(() => {\n    if (data === \"\" || data === undefined || Number(data)) {\n      return;\n    }\n    FetchWeather(data)\n      .then((response) => {\n        setWeatherData(response);\n        setTemp(Math.floor(response.main.temp));\n      })\n      .catch((error) => {\n        alert(\"Data is not found for this city\");\n        console.log(\"Info at error block:\", error.message);\n      });\n  }, [data]);\n\n  useEffect(() => {\n    if (!isNaN(location.lat) && !isNaN(location.lon)) {\n      FetchWeaterByLocation(location)\n        .then((response) => {\n          setWeatherData(response);\n          setTemp(Math.floor(response.main.temp));\n        })\n        .catch((error) => {\n          alert(\"Data is not found for this city\");\n          console.log(error.message);\n        });\n    }\n  }, [location]);\n\n  if (typeof weatherData.main !== \"undefined\") {\n    return (\n      <Container>\n        <WeatherPicture picture={weatherData.weather[0].icon} />\n        <InfoWrapper>\n          <h3>\n            {weatherData.name},{weatherData.sys.country}\n          </h3>\n          <Temp>{temp}&#176;c</Temp>\n          <Text>\n            Its {isItWarm(temp)}, humidity: {weatherData.main.humidity}% and it\n            feels like {Math.floor(weatherData.main.feels_like)}&#176;c\n          </Text>\n          <Text>Wind: {Math.floor(weatherData.wind.speed)} m/s</Text>\n          <Text>QNH: {Math.floor(weatherData.main.pressure)}</Text>\n        </InfoWrapper>\n      </Container>\n    );\n  }\n  return <p>No data yet</p>;\n}\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  min-width: 280px;\n  max-width: 600px;\n  padding: 16px 8px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  min-width: 220px;\n  max-width: 450px;\n  margin-right: 10px;\n  border-radius: 4px;\n  border: 1px solid #fd7e14;\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  background-color: #fd7e14;\n  border: none;\n  color: #fff;\n`;\n","import { useState } from \"react\";\nimport { Form, Input, Button } from \"./CitySearch.styled\";\n\nexport function CitySearch({ onCitySearch, onCoordSearch }) {\n  const [result, setResult] = useState(\"\");\n  const [location, setLocation] = useState({\n    lat: \"\",\n    lon: \"\",\n  });\n\n  const formHandler = (event) => {\n    event.preventDefault();\n    if (result === \"\" && location.lat === \"\" && location.lon === \"\") {\n      alert(\"Enter the city or coordinates\");\n      return;\n    }\n    onCitySearch(result);\n    onCoordSearch(location);\n\n    event.target.reset();\n  };\n\n  const inputHandler = (event) => {\n    const data = event.target.value;\n    if (isNaN(data.slice(0, 2)) && Number(data) !== 0) {\n      setResult(data);\n    }\n    const coords = data.split(\" \");\n    setLocation({ lat: Math.round(coords[0]), lon: Math.round(coords[1]) });\n  };\n\n  return (\n    <Form onSubmit={formHandler}>\n      <Input\n        type=\"text\"\n        name=\"citySearch\"\n        placeholder=\"Enter the city or coordinates\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport const useGeolocation = () => {\n  const [loc, setLoc] = useState({\n    loaded: false,\n    coord: { lat: \"\", lon: \"\" },\n    error: \"\",\n  });\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      setLoc({\n        loaded: true,\n        err: \"Not supported\",\n      });\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  function onSuccess(location) {\n    setLoc({\n      loaded: true,\n      coord: { lat: location.coords.latitude, lon: location.coords.longitude },\n      error: \"\",\n    });\n  }\n  function onError(error) {\n    setLoc({\n      loaded: true,\n      error,\n    });\n    console.log(error.message);\n  }\n  return loc.coord;\n};\n","import \"./App.css\";\nimport { CurrentTemp } from \"./views/CurrentTemp\";\nimport { CitySearch } from \"./components/CitySearch\";\nimport { useState, useEffect } from \"react\";\nimport { useGeolocation } from \"./hooks/useGeolocation\";\nimport styled from \"@emotion/styled\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [location, setLocation] = useState({});\n  const position = useGeolocation();\n\n  useEffect(() => {\n    setLocation({\n      lat: Number(position.lat),\n      lon: Number(position.lon),\n    });\n  }, [position.lat, position.lon]);\n\n  const inputHandler = (result) => setCity(result);\n  const coordInputHandler = (result) => setLocation(result);\n\n  return (\n    <Container>\n      <Wrapper id=\"tempCard\">\n        <CitySearch\n          onCitySearch={inputHandler}\n          onCoordSearch={coordInputHandler}\n        />\n        <CurrentTemp data={city} location={location} />\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  min-width: 320px;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  padding: 8px;\n  margin: 20px auto;\n  background-color: transparent;\n`;\n\nconst Wrapper = styled.div`\n  border-radius: 12px;\n  box-shadow: -1px 0px 8px -3px rgba(34, 60, 80, 0.15);\n  width: 95vw;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}